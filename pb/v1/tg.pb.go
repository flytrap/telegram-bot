// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: tg.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tid      int64    `protobuf:"varint,1,opt,name=tid,proto3" json:"tid,omitempty"`
	Type     int32    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Number   uint32   `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Code     string   `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Name     string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Desc     string   `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Category string   `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	Lang     string   `protobuf:"bytes,8,opt,name=lang,proto3" json:"lang,omitempty"`
	Tags     []string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *DataItem) Reset() {
	*x = DataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataItem) ProtoMessage() {}

func (x *DataItem) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataItem.ProtoReflect.Descriptor instead.
func (*DataItem) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{0}
}

func (x *DataItem) GetTid() int64 {
	if x != nil {
		return x.Tid
	}
	return 0
}

func (x *DataItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DataItem) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *DataItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DataItem) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *DataItem) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *DataItem) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Ad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Keyword  string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Global   int32  `protobuf:"varint,3,opt,name=global,proto3" json:"global,omitempty"`
	IsShowAd bool   `protobuf:"varint,4,opt,name=isShowAd,proto3" json:"isShowAd,omitempty"`
	Expire   string `protobuf:"bytes,5,opt,name=expire,proto3" json:"expire,omitempty"`
	Category uint32 `protobuf:"varint,6,opt,name=category,proto3" json:"category,omitempty"`
	Language string `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	Name     string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Code     string `protobuf:"bytes,9,opt,name=code,proto3" json:"code,omitempty"`
	Type     int32  `protobuf:"varint,10,opt,name=type,proto3" json:"type,omitempty"`
	Number   uint32 `protobuf:"varint,11,opt,name=number,proto3" json:"number,omitempty"`
	Desc     string `protobuf:"bytes,12,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *Ad) Reset() {
	*x = Ad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ad) ProtoMessage() {}

func (x *Ad) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ad.ProtoReflect.Descriptor instead.
func (*Ad) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{1}
}

func (x *Ad) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Ad) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *Ad) GetGlobal() int32 {
	if x != nil {
		return x.Global
	}
	return 0
}

func (x *Ad) GetIsShowAd() bool {
	if x != nil {
		return x.IsShowAd
	}
	return false
}

func (x *Ad) GetExpire() string {
	if x != nil {
		return x.Expire
	}
	return ""
}

func (x *Ad) GetCategory() uint32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *Ad) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Ad) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ad) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Ad) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Ad) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Ad) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Weight int32  `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{2}
}

func (x *Tag) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type BotUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       int64  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	FirstName    string `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName     string `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Username     string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	LanguageCode string `protobuf:"bytes,5,opt,name=LanguageCode,proto3" json:"LanguageCode,omitempty"`
	IsBot        bool   `protobuf:"varint,6,opt,name=IsBot,proto3" json:"IsBot,omitempty"`
	IsPremium    bool   `protobuf:"varint,7,opt,name=IsPremium,proto3" json:"IsPremium,omitempty"`
	Lang         string `protobuf:"bytes,8,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *BotUser) Reset() {
	*x = BotUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotUser) ProtoMessage() {}

func (x *BotUser) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotUser.ProtoReflect.Descriptor instead.
func (*BotUser) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{3}
}

func (x *BotUser) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *BotUser) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *BotUser) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *BotUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BotUser) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *BotUser) GetIsBot() bool {
	if x != nil {
		return x.IsBot
	}
	return false
}

func (x *BotUser) GetIsPremium() bool {
	if x != nil {
		return x.IsPremium
	}
	return false
}

func (x *BotUser) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type DataSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Q        string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Type     int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Code     string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Lang     string `protobuf:"bytes,5,opt,name=lang,proto3" json:"lang,omitempty"`
	Page     int64  `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	Size     int64  `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Order    string `protobuf:"bytes,8,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *DataSearchRequest) Reset() {
	*x = DataSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSearchRequest) ProtoMessage() {}

func (x *DataSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSearchRequest.ProtoReflect.Descriptor instead.
func (*DataSearchRequest) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{4}
}

func (x *DataSearchRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *DataSearchRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *DataSearchRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DataSearchRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DataSearchRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *DataSearchRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DataSearchRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DataSearchRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

type AdFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Q            string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	Global       int32  `protobuf:"varint,2,opt,name=global,proto3" json:"global,omitempty"`
	IsShowAd     bool   `protobuf:"varint,3,opt,name=isShowAd,proto3" json:"isShowAd,omitempty"`
	FilterExpire bool   `protobuf:"varint,4,opt,name=filterExpire,proto3" json:"filterExpire,omitempty"`
	Type         int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Number       uint32 `protobuf:"varint,6,opt,name=number,proto3" json:"number,omitempty"`
	Page         int64  `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	Size         int64  `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	Order        string `protobuf:"bytes,9,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *AdFilter) Reset() {
	*x = AdFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdFilter) ProtoMessage() {}

func (x *AdFilter) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdFilter.ProtoReflect.Descriptor instead.
func (*AdFilter) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{5}
}

func (x *AdFilter) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *AdFilter) GetGlobal() int32 {
	if x != nil {
		return x.Global
	}
	return 0
}

func (x *AdFilter) GetIsShowAd() bool {
	if x != nil {
		return x.IsShowAd
	}
	return false
}

func (x *AdFilter) GetFilterExpire() bool {
	if x != nil {
		return x.FilterExpire
	}
	return false
}

func (x *AdFilter) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AdFilter) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *AdFilter) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AdFilter) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AdFilter) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

type QueryDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   *RetInfo    `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Data  []*DataItem `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Total int64       `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryDataResp) Reset() {
	*x = QueryDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDataResp) ProtoMessage() {}

func (x *QueryDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDataResp.ProtoReflect.Descriptor instead.
func (*QueryDataResp) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{6}
}

func (x *QueryDataResp) GetRet() *RetInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *QueryDataResp) GetData() []*DataItem {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryDataResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type QueryAdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   *RetInfo `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Data  []*Ad    `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Total int64    `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryAdResp) Reset() {
	*x = QueryAdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAdResp) ProtoMessage() {}

func (x *QueryAdResp) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAdResp.ProtoReflect.Descriptor instead.
func (*QueryAdResp) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{7}
}

func (x *QueryAdResp) GetRet() *RetInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *QueryAdResp) GetData() []*Ad {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryAdResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type QueryTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   *RetInfo `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Data  []*Tag   `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Total int64    `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryTagResp) Reset() {
	*x = QueryTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTagResp) ProtoMessage() {}

func (x *QueryTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTagResp.ProtoReflect.Descriptor instead.
func (*QueryTagResp) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{8}
}

func (x *QueryTagResp) GetRet() *RetInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *QueryTagResp) GetData() []*Tag {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryTagResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type QueryUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   *RetInfo   `protobuf:"bytes,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Data  []*BotUser `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Total int64      `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QueryUserResp) Reset() {
	*x = QueryUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserResp) ProtoMessage() {}

func (x *QueryUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserResp.ProtoReflect.Descriptor instead.
func (*QueryUserResp) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{9}
}

func (x *QueryUserResp) GetRet() *RetInfo {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *QueryUserResp) GetData() []*BotUser {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryUserResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Q     string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	Page  int64  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size  int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Order string `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{10}
}

func (x *QueryRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *QueryRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QueryRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

type DeleteIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteIds) Reset() {
	*x = DeleteIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIds) ProtoMessage() {}

func (x *DeleteIds) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIds.ProtoReflect.Descriptor instead.
func (*DeleteIds) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteIds) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteCodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []string `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *DeleteCodes) Reset() {
	*x = DeleteCodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCodes) ProtoMessage() {}

func (x *DeleteCodes) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCodes.ProtoReflect.Descriptor instead.
func (*DeleteCodes) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteCodes) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

type RetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RetInfo) Reset() {
	*x = RetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetInfo) ProtoMessage() {}

func (x *RetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetInfo.ProtoReflect.Descriptor instead.
func (*RetInfo) Descriptor() ([]byte, []int) {
	return file_tg_proto_rawDescGZIP(), []int{13}
}

func (x *RetInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *RetInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_tg_proto protoreflect.FileDescriptor

var file_tg_proto_rawDesc = []byte{
	0x0a, 0x08, 0x74, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x67, 0x2e, 0x76,
	0x31, 0x22, 0xc8, 0x01, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x9a, 0x02, 0x0a,
	0x02, 0x41, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x41,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x41,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x41, 0x0a, 0x03, 0x54, 0x61, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xe3, 0x01, 0x0a,
	0x07, 0x42, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73,
	0x42, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x42, 0x6f, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x22, 0xb7, 0x01, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xda, 0x01, 0x0a,
	0x08, 0x41, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x6c, 0x0a, 0x0d, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x64, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x66, 0x0a,
	0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a,
	0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12,
	0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x6b, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x5a, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x1d,
	0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x23, 0x0a,
	0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0x33, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xe8, 0x01, 0x0a, 0x0c, 0x54, 0x67, 0x42, 0x6f,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3e, 0x0a,
	0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x2e, 0x74, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2f, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x74, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x0e, 0x2e, 0x74,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x32,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x2e, 0x74,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x1a, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x00, 0x32, 0xbe, 0x01, 0x0a, 0x09, 0x41, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x2f, 0x0a, 0x06, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x12, 0x0f, 0x2e, 0x74, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x12, 0x2e, 0x74, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x27, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x12, 0x09, 0x2e,
	0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x1a, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x08, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x12, 0x09, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x1a, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x12,
	0x10, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64,
	0x73, 0x1a, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x00, 0x32, 0xe3, 0x01, 0x0a, 0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x13, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x74,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0a, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x67, 0x1a, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0a, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x67, 0x1a, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x1a, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x32, 0xcf, 0x01, 0x0a, 0x0a, 0x54, 0x61,
	0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x61, 0x67, 0x12, 0x13, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x2e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x67, 0x12, 0x0a, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x1a, 0x0e, 0x2e,
	0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12,
	0x29, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x0a, 0x2e, 0x74,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x1a, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x09, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x10, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x1a, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x32, 0xd8, 0x01, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x74,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x1a, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x1a, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x10, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x64, 0x73, 0x1a, 0x0e, 0x2e, 0x74, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x76, 0x31, 0x3b, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tg_proto_rawDescOnce sync.Once
	file_tg_proto_rawDescData = file_tg_proto_rawDesc
)

func file_tg_proto_rawDescGZIP() []byte {
	file_tg_proto_rawDescOnce.Do(func() {
		file_tg_proto_rawDescData = protoimpl.X.CompressGZIP(file_tg_proto_rawDescData)
	})
	return file_tg_proto_rawDescData
}

var file_tg_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_tg_proto_goTypes = []interface{}{
	(*DataItem)(nil),          // 0: tg.v1.DataItem
	(*Ad)(nil),                // 1: tg.v1.Ad
	(*Tag)(nil),               // 2: tg.v1.Tag
	(*BotUser)(nil),           // 3: tg.v1.BotUser
	(*DataSearchRequest)(nil), // 4: tg.v1.DataSearchRequest
	(*AdFilter)(nil),          // 5: tg.v1.AdFilter
	(*QueryDataResp)(nil),     // 6: tg.v1.QueryDataResp
	(*QueryAdResp)(nil),       // 7: tg.v1.QueryAdResp
	(*QueryTagResp)(nil),      // 8: tg.v1.QueryTagResp
	(*QueryUserResp)(nil),     // 9: tg.v1.QueryUserResp
	(*QueryRequest)(nil),      // 10: tg.v1.QueryRequest
	(*DeleteIds)(nil),         // 11: tg.v1.DeleteIds
	(*DeleteCodes)(nil),       // 12: tg.v1.DeleteCodes
	(*RetInfo)(nil),           // 13: tg.v1.RetInfo
}
var file_tg_proto_depIdxs = []int32{
	13, // 0: tg.v1.QueryDataResp.ret:type_name -> tg.v1.RetInfo
	0,  // 1: tg.v1.QueryDataResp.data:type_name -> tg.v1.DataItem
	13, // 2: tg.v1.QueryAdResp.ret:type_name -> tg.v1.RetInfo
	1,  // 3: tg.v1.QueryAdResp.data:type_name -> tg.v1.Ad
	13, // 4: tg.v1.QueryTagResp.ret:type_name -> tg.v1.RetInfo
	2,  // 5: tg.v1.QueryTagResp.data:type_name -> tg.v1.Tag
	13, // 6: tg.v1.QueryUserResp.ret:type_name -> tg.v1.RetInfo
	3,  // 7: tg.v1.QueryUserResp.data:type_name -> tg.v1.BotUser
	0,  // 8: tg.v1.TgBotService.ImportData:input_type -> tg.v1.DataItem
	4,  // 9: tg.v1.TgBotService.SearchData:input_type -> tg.v1.DataSearchRequest
	0,  // 10: tg.v1.TgBotService.UpdateData:input_type -> tg.v1.DataItem
	12, // 11: tg.v1.TgBotService.DeleteData:input_type -> tg.v1.DeleteCodes
	5,  // 12: tg.v1.AdService.ListAd:input_type -> tg.v1.AdFilter
	1,  // 13: tg.v1.AdService.CreateAd:input_type -> tg.v1.Ad
	1,  // 14: tg.v1.AdService.UpdateAd:input_type -> tg.v1.Ad
	11, // 15: tg.v1.AdService.DeleteAd:input_type -> tg.v1.DeleteIds
	10, // 16: tg.v1.CategoryService.ListCategory:input_type -> tg.v1.QueryRequest
	2,  // 17: tg.v1.CategoryService.CreateCategory:input_type -> tg.v1.Tag
	2,  // 18: tg.v1.CategoryService.UpdateCategory:input_type -> tg.v1.Tag
	11, // 19: tg.v1.CategoryService.DeleteCategory:input_type -> tg.v1.DeleteIds
	10, // 20: tg.v1.TagService.ListTag:input_type -> tg.v1.QueryRequest
	2,  // 21: tg.v1.TagService.GetOrCreateTag:input_type -> tg.v1.Tag
	2,  // 22: tg.v1.TagService.UpdateTag:input_type -> tg.v1.Tag
	11, // 23: tg.v1.TagService.DeleteTag:input_type -> tg.v1.DeleteIds
	10, // 24: tg.v1.UserService.ListUser:input_type -> tg.v1.QueryRequest
	3,  // 25: tg.v1.UserService.CreateUser:input_type -> tg.v1.BotUser
	3,  // 26: tg.v1.UserService.UpdateUser:input_type -> tg.v1.BotUser
	11, // 27: tg.v1.UserService.DeleteUser:input_type -> tg.v1.DeleteIds
	13, // 28: tg.v1.TgBotService.ImportData:output_type -> tg.v1.RetInfo
	6,  // 29: tg.v1.TgBotService.SearchData:output_type -> tg.v1.QueryDataResp
	13, // 30: tg.v1.TgBotService.UpdateData:output_type -> tg.v1.RetInfo
	13, // 31: tg.v1.TgBotService.DeleteData:output_type -> tg.v1.RetInfo
	7,  // 32: tg.v1.AdService.ListAd:output_type -> tg.v1.QueryAdResp
	13, // 33: tg.v1.AdService.CreateAd:output_type -> tg.v1.RetInfo
	13, // 34: tg.v1.AdService.UpdateAd:output_type -> tg.v1.RetInfo
	13, // 35: tg.v1.AdService.DeleteAd:output_type -> tg.v1.RetInfo
	8,  // 36: tg.v1.CategoryService.ListCategory:output_type -> tg.v1.QueryTagResp
	13, // 37: tg.v1.CategoryService.CreateCategory:output_type -> tg.v1.RetInfo
	13, // 38: tg.v1.CategoryService.UpdateCategory:output_type -> tg.v1.RetInfo
	13, // 39: tg.v1.CategoryService.DeleteCategory:output_type -> tg.v1.RetInfo
	8,  // 40: tg.v1.TagService.ListTag:output_type -> tg.v1.QueryTagResp
	13, // 41: tg.v1.TagService.GetOrCreateTag:output_type -> tg.v1.RetInfo
	13, // 42: tg.v1.TagService.UpdateTag:output_type -> tg.v1.RetInfo
	13, // 43: tg.v1.TagService.DeleteTag:output_type -> tg.v1.RetInfo
	9,  // 44: tg.v1.UserService.ListUser:output_type -> tg.v1.QueryUserResp
	13, // 45: tg.v1.UserService.CreateUser:output_type -> tg.v1.RetInfo
	13, // 46: tg.v1.UserService.UpdateUser:output_type -> tg.v1.RetInfo
	13, // 47: tg.v1.UserService.DeleteUser:output_type -> tg.v1.RetInfo
	28, // [28:48] is the sub-list for method output_type
	8,  // [8:28] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_tg_proto_init() }
func file_tg_proto_init() {
	if File_tg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_tg_proto_goTypes,
		DependencyIndexes: file_tg_proto_depIdxs,
		MessageInfos:      file_tg_proto_msgTypes,
	}.Build()
	File_tg_proto = out.File
	file_tg_proto_rawDesc = nil
	file_tg_proto_goTypes = nil
	file_tg_proto_depIdxs = nil
}
